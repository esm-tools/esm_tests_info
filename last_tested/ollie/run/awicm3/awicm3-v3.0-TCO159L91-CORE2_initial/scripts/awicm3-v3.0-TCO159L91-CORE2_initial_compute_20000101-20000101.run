#!/usr/bin/bash
#SBATCH --partition=mpp
#SBATCH --time=00:45:00
#SBATCH --nodes=10
#SBATCH --output=<TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/log/awicm3-v3.0-TCO159L91-CORE2_initial_awicm3_compute_20000101-20000101_%j.log --error=<TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/log/awicm3-v3.0-TCO159L91-CORE2_initial_awicm3_compute_20000101-20000101_%j.log
#SBATCH --job-name=awicm3-v3.0-TCO159L91-CORE2_initial
#SBATCH --mail-type=NONE
#SBATCH --exclusive

source /etc/profile.d/modules.sh
module purge
module load cmake
module load udunits
module load gribapi/1.28.0
module unload intel.compiler
module load intel.compiler
module unload netcdf
module load hdf5
module load centoslibs cdo nco netcdf/4.6.2_intel
module load automake
module load python3/3.7.7_intel2020u2
module load git
module list
module unload intel.mpi
module load intel.mpi
module unload gribapi
module unload hdf5
module unload intel.mpi
module load intel.mpi/2021.3.0
module unload gribapi
module unload hdf5
module unload intel.mpi
module load intel.mpi/2021.3.0

export LC_ALL=en_US.UTF-8
export FC="mpiifort -mkl"
export F77="mpiifort -mkl"
export MPIFC=mpiifort
export MPICC=mpiicc
export CC=mpiicc
export CXX=mpiicpc
export IO_LIB_ROOT=/work/ollie/jstreffi/software/HPC_libraries/intel2018.0.5_intelmpi_2021.3.0_20220623
export HDF5ROOT=$IO_LIB_ROOT
export NETCDFFROOT=$IO_LIB_ROOT
export NETCDFROOT=$IO_LIB_ROOT
export NETCDF_Fortran_INCLUDE_DIRECTORIES=$NETCDFFROOT/include
export NETCDF_CXX_INCLUDE_DIRECTORIES=$NETCDFROOT/include
export NETCDF_CXX_LIBRARIES=$NETCDFROOT/lib
export PERL5LIB=/usr/lib64/perl5
export LAPACK_LIB="-lmkl_intel_lp64 -lmkl_core -mkl=sequential -lpthread -lm -ldl"
export LAPACK_LIB_DEFAULT="-L/global/AWIsoft/intel/2018/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential"
export XML2ROOT=/usr
export ZLIBROOT=/usr
export MPIROOT=${I_MPI_ROOT}/intel64
export MPI_LIB=$(mpiifort -show |sed -e 's/^[^ ]*//' -e 's/-[I][^ ]*//g')
export PATH=/work/ollie/jhegewal/sw/cmake/bin:$PATH
export PATH=$PATH:$IO_LIB_ROOT/bin
export LD_LIBRARY_PATH=$IO_LIB_ROOT/lib:$LD_LIBRARY_PATH
export SZIPROOT=$IO_LIB_ROOT
export HDF5_ROOT=$HDF5ROOT
export ECCODESROOT=$IO_LIB_ROOT
export HDF5_C_INCLUDE_DIRECTORIES=$HDF5_ROOT/include
export NETCDF_C_INCLUDE_DIRECTORIES=$NETCDFROOT/include
export OASIS3MCT_FC_LIB="-L$NETCDFFROOT/lib -lnetcdff"
export OIFS_FFIXED=""
export GRIB_SAMPLES_PATH="$ECCODESROOT/share/eccodes/ifs_samples/grib1_mlgrib2"
export DR_HOOK_IGNORE_SIGNALS=-1
export OMP_SCHEDULE=STATIC
export OMP_STACKSIZE=128M
export ACCOUNT=None
export ESM_TESTING_DIR=<TEST_DIR>/run/awicm3/
export MODEL_DIR=<TEST_DIR>/comp/awicm3/awicm3-v3.0
export FESOM_USE_CPLNG="active"
export ECE_CPL_NEMO_LIM="false"
export ECE_CPL_FESOM_FESIM="true"
export ECE_AWI_CPL_FESOM="true"
export ENVIRONMENT_SET_BY_ESMTOOLS=TRUE

unset SLURM_MEM_PER_NODE
unset SLURM_MEM_PER_CPU
unset SLURM_DISTRIBUTION
unset SLURM_NTASKS
unset SLURM_NPROCS
unset SLURM_ARBITRARY_NODELIST

# Set stack size to unlimited
ulimit -s unlimited
# 3...2...1...Liftoff!

echo $(date +"%a %b  %e %T %Y") : compute 1 2000-01-01T00:00:00 1216 - start >> <TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/log//awicm3-v3.0-TCO159L91-CORE2_initial_awicm3.log

cd <TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/run_20000101-20000101/work/

#Creating hostlist for MPI + MPI&OMP heterogeneous parallel job
rm -f ./hostlist
export SLURM_HOSTFILE=<TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/run_20000101-20000101/work//hostlist
IFS=$'\n'; set -f
listnodes=($(< <( scontrol show hostnames $SLURM_JOB_NODELIST )))
unset IFS; set +f
rank=0
current_core=0
current_core_mpi=0
mpi_tasks_fesom=288
omp_threads_fesom=1
mpi_tasks_oifs=18
omp_threads_oifs=2
mpi_tasks_rnfmap=1
omp_threads_rnfmap=36
for model in fesom oifs rnfmap oasis3mct ;do
    eval nb_of_cores=\${mpi_tasks_${model}}
    eval nb_of_cores=$((${nb_of_cores}-1))
    for nb_proc_mpi in `seq 0 ${nb_of_cores}`; do
        (( index_host = current_core / 36 ))
        host_value=${listnodes[${index_host}]}
        (( slot =  current_core % 36 ))
        echo $host_value >> hostlist
        (( current_core = current_core + omp_threads_${model} ))
    done
done

time srun -l --kill-on-bad-exit=1 --cpu_bind=none --multi-prog hostfile_srun 2>&1 &

# Call to esm_runscript to start subjobs:
# ['tidy']
process=$! 
# Comment the following line if you don't want esm_runscripts to restart:
cd <TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/scripts/
esm_runscripts awicm3-v3.0-TCO159L91-CORE2_initial.yaml -e awicm3-v3.0-TCO159L91-CORE2_initial -t observe_compute -p ${process} -s 20000101 -r 1 -v  --last-jobtype prepcompute --open-run

echo $(date +"%a %b  %e %T %Y") : compute 1 2000-01-01T00:00:00 1216 - done >> <TEST_DIR>/run/awicm3//awicm3-v3.0-TCO159L91-CORE2_initial/log//awicm3-v3.0-TCO159L91-CORE2_initial_awicm3.log

wait
